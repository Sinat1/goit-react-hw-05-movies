{"version":3,"file":"static/js/55.d07ce170.chunk.js","mappings":"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","sources":["icons/searchIcon.svg","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","api/getSearchedMovies.js","components/SearchedMoviesList/SearchedMoviesList.styled.js","components/SearchedMoviesList/SearchedMoviesList.jsx","pages/Movies.jsx"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSearchIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 25,\n    height: 25,\n    viewBox: \"0 0 20 20\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"search\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"black\",\n    d: \"M12.9 14.32c-1.34 1.049-3.050 1.682-4.908 1.682-4.418 0-8-3.582-8-8s3.582-8 8-8c4.418 0 8 3.582 8 8 0 1.858-0.633 3.567-1.695 4.925l0.013-0.018 5.35 5.33-1.42 1.42-5.33-5.34zM8 14c3.314 0 6-2.686 6-6s-2.686-6-6-6v0c-3.314 0-6 2.686-6 6s2.686 6 6 6v0z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSearchIcon);\nexport default __webpack_public_path__ + \"static/media/searchIcon.6d59e1de0129596728f9fad0bf6ba1c1.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const StyledSearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  margin-top: 30px;\n  margin-top: 30px;\n  margin-left: 30%;\n  margin-right: 20%;\n  background-color: #fff;\n  border: 1px solid #1f1f1f;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const StyledSearchFormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const StyledSearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 20px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ReactComponent as SearchIcon } from '../../icons/searchIcon.svg';\nimport Notiflix from 'notiflix';\nimport {\n  StyledSearchForm,\n  StyledSearchFormBtn,\n  StyledSearchFormInput,\n} from './SearchBar.styled';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const hanldeQueryChange = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (query.trim() === '') {\n      return Notiflix.Notify.warning('Type something in the input');\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <StyledSearchForm onSubmit={handleSubmit}>\n      <StyledSearchFormInput\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={query}\n        onChange={hanldeQueryChange}\n      />\n      <StyledSearchFormBtn type=\"submit\">\n        <SearchIcon />\n      </StyledSearchFormBtn>\n    </StyledSearchForm>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import axios from 'axios';\nimport Notiflix from 'notiflix';\n\nconst API_KEY = '53d36a46b9069260a6b19b0d73ae2aba';\n\nexport const getSearchedMovies = async query => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=true`\n    );\n\n    return data;\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  }\n};\n","import styled from 'styled-components';\n\nimport { Link } from 'react-router-dom';\n\nexport const StyledMoviesList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  grid-gap: 16px;\n  margin-top: 30px;\n  margin-bottom: 50px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const StyledMovieItem = styled.li`\n  text-align: center;\n  border-radius: 2px;\n  margin-bottom: 25px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const StyledMovieImg = styled.img`\n  width: 100%;\n  height: 82%;\n  object-fit: cover;\n`;\n\nexport const StyledMovieTitle = styled.h4`\n  font-style: normal;\n  color: #000;\n  margin-top: 15px;\n  margin-bottom: 0;\n`;\n\nexport const StyledWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-left: 15px;\n  padding-right: 15px;\n  color: #1f1f1f;\n`;\n\nexport const StyledInfo = styled.p`\n  margin-top: 15px;\n  margin-bottom: 10px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  StyledMoviesList,\n  StyledMovieItem,\n  StyledLink,\n  StyledMovieImg,\n  StyledMovieTitle,\n  StyledWrapper,\n  StyledInfo,\n} from './SearchedMoviesList.styled';\n\nexport const SearchedMoviesList = ({ movies, isLoading }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <StyledMoviesList>\n        {movies.map(movie => (\n          <StyledMovieItem key={movie.id}>\n            <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              <StyledMovieImg\n                src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                alt={movie.title}\n              />\n              <StyledMovieTitle>{movie.title}</StyledMovieTitle>\n              <StyledWrapper>\n                <StyledInfo>Release: {movie.release_date}</StyledInfo>\n                <StyledInfo>Rating: {movie.vote_average.toFixed(1)}</StyledInfo>\n              </StyledWrapper>\n            </StyledLink>\n          </StyledMovieItem>\n        ))}\n      </StyledMoviesList>\n    </>\n  );\n};\n\nSearchedMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { getSearchedMovies } from 'api/getSearchedMovies';\nimport { SearchedMoviesList } from 'components/SearchedMoviesList/SearchedMoviesList';\nimport { useSearchParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const movieTitle = searchQuery.get('query') ?? '';\n\n  useEffect(() => {\n    if (movieTitle === '') {\n      return;\n    }\n\n    async function getMovies() {\n      setIsLoading(true);\n      try {\n        const { results } = await getSearchedMovies(movieTitle);\n        if (results.length > 0) {\n          setMovies([...movies, ...results]);\n          Notiflix.Notify.success('Hoooray, we found something.');\n          setIsLoading(false);\n        } else {\n          if (results.length === 0) {\n            setIsLoading(false);\n            Notiflix.Notify.failure(\"We didn't find anything =(\");\n          }\n          setIsLoading(false);\n        }\n      } catch (error) {\n        Notiflix.Notify.failure('Failed to load searched Movies.');\n      }\n    }\n    getMovies();\n    // eslint-disable-next-line\n  }, [movieTitle]);\n\n  const handleFormSubmit = query => {\n    if (movieTitle === query) {\n      return;\n    }\n\n    const newQuery = query !== '' ? { query } : {};\n    setSearchQuery(newQuery);\n    setMovies([]);\n  };\n\n  return (\n    <main>\n      <SearchBar onSubmit={handleFormSubmit} />\n      <SearchedMoviesList isLoading={isLoading} movies={movies} />\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSearchIcon","_ref","svgRef","title","titleId","props","xmlns","width","height","viewBox","ref","undefined","id","fill","d","ForwardRef","StyledSearchForm","styled","StyledSearchFormBtn","StyledSearchFormInput","SearchBar","onSubmit","useState","query","setQuery","event","preventDefault","trim","Notiflix","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","getSearchedMovies","axios","data","message","StyledMoviesList","StyledMovieItem","StyledLink","Link","StyledMovieImg","StyledMovieTitle","StyledWrapper","StyledInfo","SearchedMoviesList","movies","isLoading","location","useLocation","Loader","map","movie","to","state","from","src","poster_path","alt","release_date","vote_average","toFixed","setMovies","setIsLoading","useSearchParams","searchQuery","setSearchQuery","movieTitle","get","useEffect","results","getMovies"],"sourceRoot":""}