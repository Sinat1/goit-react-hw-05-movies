{"version":3,"file":"static/js/348.beea05f9.chunk.js","mappings":"6PAKaA,EAAe,mCAAG,WAAMC,GAAN,kGAEJC,EAAAA,GAAAA,IAAA,6CACiBD,EADjB,4BAJX,mCAIW,oBAFI,uBAEnBE,EAFmB,EAEnBA,KAFmB,kBAMpBA,GANoB,gCAQ3BC,IAAAA,OAAAA,QAAwB,KAAMC,SARH,yDAAH,sD,oCCHfC,EAAiBC,EAAAA,GAAAA,GAAH,8RAadC,EAAiBD,EAAAA,GAAAA,GAAH,iOAQdE,EAAsBF,EAAAA,GAAAA,GAAH,8ZAkBnBG,EAAgBH,EAAAA,GAAAA,IAAH,8E,SCS1B,EAvCa,WACX,OAAgCI,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQZ,GAAOa,EAAAA,EAAAA,MAAPb,GAeR,OAbAc,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAE0Bf,EAAgBC,GAF1C,OAEUe,EAFV,OAIIH,EAAYG,EAAQC,MAJxB,gDAMIb,IAAAA,OAAAA,QAAwB,uBAN5B,0DADc,uBAAC,WAAD,wBAUdc,CAAajB,EACd,GAAE,CAACA,KAGF,SAACK,EAAD,UACGM,EAASO,OAAS,EACjBP,EAASQ,KAAI,SAAAH,GAAI,OACf,UAACT,EAAD,YACE,SAACE,EAAD,CACEW,IAAG,yCAAoCJ,EAAKK,cAC5CC,IAAKN,EAAKO,iBAEZ,wBAAKP,EAAKO,gBALZ,cAMcP,EAAKQ,YANER,EAAKhB,GADX,KAWjB,SAACQ,EAAD,mFAMP,C","sources":["api/getMovieCredits.js","components/MovieAdditionalInfo/Cast.styled.js","components/MovieAdditionalInfo/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\n\nconst API_KEY = '53d36a46b9069260a6b19b0d73ae2aba';\n\nexport const getMovieCredits = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    return data;\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  }\n};\n","import styled from 'styled-components';\n\nexport const StyledCastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  grid-gap: 16px;\n  margin-top: 30px;\n  margin-bottom: 50px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const StyledCastItem = styled.li`\n  text-align: center;\n  border-radius: 2px;\n  margin-bottom: 25px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const StyledCastErrorItem = styled.li`\n  dispay: flex;\n  align-items: center;\n  justify-content: center;\n  width: 600px;\n  height: 50px;\n  margin-left: 30vw;\n  margin-right: 40vw;\n  text-align: center;\n  border-radius: 2px;\n  margin-top: 25px;\n  padding-top: 30px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  font-size: 18px;\n`;\n\nexport const StyledCastImg = styled.img`\n  width: 100%;\n  height: 82%;\n  object-fit: cover;\n`;\n","import { getMovieCredits } from 'api/getMovieCredits';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport {\n  StyledCastList,\n  StyledCastItem,\n  StyledCastErrorItem,\n  StyledCastImg,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const [castInfo, setCastInfo] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function getMovieCast() {\n      try {\n        const results = await getMovieCredits(id);\n\n        setCastInfo(results.cast);\n      } catch (error) {\n        Notiflix.Notify.failure('Failed to load cast');\n      }\n    }\n    getMovieCast(id);\n  }, [id]);\n\n  return (\n    <StyledCastList>\n      {castInfo.length > 0 ? (\n        castInfo.map(cast => (\n          <StyledCastItem key={cast.id}>\n            <StyledCastImg\n              src={`https://image.tmdb.org/t/p/w200${cast.profile_path}`}\n              alt={cast.original_name}\n            />\n            <h4>{cast.original_name}</h4>\n            Character: {cast.character}\n          </StyledCastItem>\n        ))\n      ) : (\n        <StyledCastErrorItem>\n          We don't have any information about this movie's cast. ðŸ˜¢\n        </StyledCastErrorItem>\n      )}\n    </StyledCastList>\n  );\n};\n\nexport default Cast;\n"],"names":["getMovieCredits","id","axios","data","Notiflix","message","StyledCastList","styled","StyledCastItem","StyledCastErrorItem","StyledCastImg","useState","castInfo","setCastInfo","useParams","useEffect","results","cast","getMovieCast","length","map","src","profile_path","alt","original_name","character"],"sourceRoot":""}