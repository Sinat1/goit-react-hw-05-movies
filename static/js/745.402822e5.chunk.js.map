{"version":3,"file":"static/js/745.402822e5.chunk.js","mappings":"8RAKaA,EAAY,mCAAG,WAAMC,GAAN,kGAEDC,EAAAA,GAAAA,IAAA,6CACiBD,EADjB,oBAJX,mCAIW,oBAFC,uBAEhBE,EAFgB,EAEhBA,KAFgB,kBAMjBA,GANiB,gCAQxBC,IAAAA,OAAAA,QAAwB,KAAMC,SARN,yDAAH,sD,6CCFZC,EAAUC,EAAAA,GAAAA,IAAH,0CAIPC,EAAYD,EAAAA,GAAAA,OAAH,unBA4BTE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,mEAKVI,EAAiBJ,EAAAA,GAAAA,IAAH,gUAWdK,EAAyBL,EAAAA,GAAAA,IAAH,8CAItBM,EAAmBN,EAAAA,GAAAA,GAAH,8DAKhBO,EAAoBP,EAAAA,GAAAA,EAAH,iEAKjBQ,EAA2BR,EAAAA,GAAAA,GAAH,4CAIxBS,EAAsBT,EAAAA,GAAAA,EAAH,4CAInBU,EAAyBV,EAAAA,GAAAA,GAAH,4CAQtBW,GAJoBX,EAAAA,GAAAA,EAAH,4CAIOA,EAAAA,GAAAA,IAAH,qEAKrBY,EAAsBZ,EAAAA,GAAAA,GAAH,4CAInBa,EAAqBb,EAAAA,GAAAA,GAAH,iGAMlBc,EAAqBd,EAAAA,GAAAA,GAAH,sBAElBe,GAAqBf,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,8G,SCA/B,EAzEqB,WAAO,IAAD,IACzB,GAAkCgB,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACQ1B,GAAO2B,EAAAA,EAAAA,MAAP3B,GAEF4B,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAgB7C,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAE0BjC,EAAaC,GAFvC,OAEUiC,EAFV,OAIIT,EAAaS,GACbP,EAAeO,EAAQC,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,OALhE,gDAOInC,IAAAA,OAAAA,QAAwB,6BAP5B,0DADc,uBAAC,WAAD,wBAWdoC,CAAgBvC,EACjB,GAAE,CAACA,KAGF,8BACGuB,IACC,6BACE,SAAChB,EAAD,CAAWiC,KAAK,SAAhB,UACE,SAAChC,EAAD,CAAYiC,GAAIb,EAAhB,SAA+B,uBAEjC,UAACvB,EAAD,YACE,0BACE,SAACK,EAAD,CACEgC,IAAG,0CAAqCnB,EAAUoB,aAClDC,IAAKrB,EAAUsB,oBAGnB,UAAClC,EAAD,YACE,SAACC,EAAD,UAAmBW,EAAUsB,kBAC7B,UAAChC,EAAD,0BACmD,GAApCU,EAAUuB,aAAaC,QAAQ,GAD9C,QAGA,SAACjC,EAAD,wBACA,SAACC,EAAD,UAAsBQ,EAAUyB,YAChC,SAAChC,EAAD,qBACCS,IAAe,uBAAIA,WAGxB,UAACR,EAAD,YACE,SAACC,EAAD,sCACA,UAACC,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CAAoBoB,GAAI,OAAQX,MAAO,CAAEC,KAAMH,GAA/C,SACG,4BAGL,SAACR,EAAD,WACE,SAACC,EAAD,CACEoB,GAAI,UACJX,MAAO,CAAEC,KAAMH,GAFjB,SAIG,kCAIP,SAAC,EAAAqB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,aAOb,C","sources":["api/getMovieById.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\n\nconst API_KEY = '53d36a46b9069260a6b19b0d73ae2aba';\n\nexport const getMovieById = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return data;\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  }\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  display: flex;\n`;\n\nexport const GoBackBtn = styled.button`\n  padding: 8px 16px;\n  height: 40px;\n  width: 140px;\n  border-radius: 2px;\n  background-color: red;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: block;\n  margin-top: 25px;\n  margin-bottom: 25px;\n  border: 0;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 16px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 10px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  &:focus {\n    background-color: crimson;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  color: white;\n  text-decoration: none;\n`;\n\nexport const StyledMovieImg = styled.img`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  max-width: 100%;\n  height: 500px;\n  margin-right: 100px;\n  display: block;\n`;\n\nexport const StyledMovieInfoWrapper = styled.div`\n  max-width: 1000px;\n`;\n\nexport const StyledMovieTitle = styled.h3`\n  margin-top: 0;\n  font-size: 30px;\n`;\n\nexport const StyledMovieRating = styled.p`\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nexport const StyledMovieOverViewTitle = styled.h4`\n  font-size: 25px;\n`;\n\nexport const StyledMovieOverView = styled.p`\n  font-size: 16px;\n`;\n\nexport const StyledMovieGenresTitle = styled.h5`\n  font-size: 20px;\n`;\n\nexport const StyledMovieGenres = styled.p`\n  font-size: 16px;\n`;\n\nexport const AdditionalInfoWrapper = styled.div`\n  margin-top: 50px;\n  text-align: center;\n`;\n\nexport const AdditionalInfoTitle = styled.h4`\n  font-size: 25px;\n`;\n\nexport const AdditionalInfoList = styled.ul`\n  display: flex;\n  justify-content: space-evenly;\n  list-style: none;\n`;\n\nexport const AdditionalInfoItem = styled.li``;\n\nexport const AdditionalInfoLink = styled(Link)`\n  text-decoration: none;\n  color: #1f1f1f;\n  font-size: 20px;\n  font-weight: 600;\n`;\n","import { useParams, useLocation } from 'react-router-dom';\nimport { getMovieById } from 'api/getMovieById';\nimport { useState, useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport { Suspense } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  Wrapper,\n  GoBackBtn,\n  StyledLink,\n  StyledMovieImg,\n  StyledMovieTitle,\n  StyledMovieInfoWrapper,\n  StyledMovieRating,\n  StyledMovieOverViewTitle,\n  StyledMovieOverView,\n  StyledMovieGenresTitle,\n  AdditionalInfoWrapper,\n  AdditionalInfoTitle,\n  AdditionalInfoList,\n  AdditionalInfoItem,\n  AdditionalInfoLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [movieGenres, setMovieGenres] = useState('');\n  const { id } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    async function getMovieDetails() {\n      try {\n        const results = await getMovieById(id);\n\n        setMovieInfo(results);\n        setMovieGenres(results.genres.map(genre => genre.name).join(', '));\n      } catch (error) {\n        Notiflix.Notify.failure('Failed to get movie info.');\n      }\n    }\n    getMovieDetails(id);\n  }, [id]);\n\n  return (\n    <>\n      {movieInfo && (\n        <main>\n          <GoBackBtn type=\"button\">\n            <StyledLink to={backLinkHref}>{'<— Go back'}</StyledLink>\n          </GoBackBtn>\n          <Wrapper>\n            <div>\n              <StyledMovieImg\n                src={`https://image.tmdb.org/t/p/w500/${movieInfo.poster_path}`}\n                alt={movieInfo.original_title}\n              />\n            </div>\n            <StyledMovieInfoWrapper>\n              <StyledMovieTitle>{movieInfo.original_title}</StyledMovieTitle>\n              <StyledMovieRating>\n                User score: {movieInfo.vote_average.toFixed(1) * 10}%\n              </StyledMovieRating>\n              <StyledMovieOverViewTitle>Overview</StyledMovieOverViewTitle>\n              <StyledMovieOverView>{movieInfo.overview}</StyledMovieOverView>\n              <StyledMovieGenresTitle>Genres</StyledMovieGenresTitle>\n              {movieGenres && <p>{movieGenres}</p>}\n            </StyledMovieInfoWrapper>\n          </Wrapper>\n          <AdditionalInfoWrapper>\n            <AdditionalInfoTitle>Additional information</AdditionalInfoTitle>\n            <AdditionalInfoList>\n              <AdditionalInfoItem>\n                <AdditionalInfoLink to={'cast'} state={{ from: backLinkHref }}>\n                  {'—> Cast <—'}\n                </AdditionalInfoLink>\n              </AdditionalInfoItem>\n              <AdditionalInfoItem>\n                <AdditionalInfoLink\n                  to={'reviews'}\n                  state={{ from: backLinkHref }}\n                >\n                  {'—> Reviews <—'}\n                </AdditionalInfoLink>\n              </AdditionalInfoItem>\n            </AdditionalInfoList>\n            <Suspense fallback={<Loader />}>\n              <Outlet />\n            </Suspense>\n          </AdditionalInfoWrapper>\n        </main>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["getMovieById","id","axios","data","Notiflix","message","Wrapper","styled","GoBackBtn","StyledLink","Link","StyledMovieImg","StyledMovieInfoWrapper","StyledMovieTitle","StyledMovieRating","StyledMovieOverViewTitle","StyledMovieOverView","StyledMovieGenresTitle","AdditionalInfoWrapper","AdditionalInfoTitle","AdditionalInfoList","AdditionalInfoItem","AdditionalInfoLink","useState","movieInfo","setMovieInfo","movieGenres","setMovieGenres","useParams","backLinkHref","useLocation","state","from","useEffect","results","genres","map","genre","name","join","getMovieDetails","type","to","src","poster_path","alt","original_title","vote_average","toFixed","overview","Suspense","fallback","Loader"],"sourceRoot":""}