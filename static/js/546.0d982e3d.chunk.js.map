{"version":3,"file":"static/js/546.0d982e3d.chunk.js","mappings":"4OAIaA,EAAY,mCAAG,WAAMC,GAAN,kGAEDC,EAAAA,GAAAA,IAAA,6CACiBD,EADjB,oBAJX,mCAIW,oBAFC,uBAEhBE,EAFgB,EAEhBA,KAFgB,kBAMjBA,GANiB,gCAQxBC,QAAQC,IAAI,KAAMC,SARM,yDAAH,sD,2BC+DzB,EA9DqB,WAAO,IAAD,IACzB,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACQV,GAAOW,EAAAA,EAAAA,MAAPX,GAEFY,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAgB7C,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAE0BjB,EAAaC,GAFvC,OAEUiB,EAFV,OAIIT,EAAaS,GACbP,EAAeO,EAAQC,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,OALhE,gDAOInB,QAAQC,IAAR,MAPJ,0DADc,uBAAC,WAAD,wBAWdmB,CAAgBvB,EACjB,GAAE,CAACA,KAGF,8BACGO,IACC,6BACE,0BACE,mBAAQiB,KAAK,SAAb,UACE,SAAC,KAAD,CAAMC,GAAIb,EAAV,0BAGJ,gBACEc,IAAG,0CAAqCnB,EAAUoB,aAClDC,IAAKrB,EAAUsB,kBAEjB,wBAAKtB,EAAUc,QACf,wCAAoD,GAApCd,EAAUuB,aAAaC,QAAQ,GAA/C,QACA,sCACA,uBAAIxB,EAAUyB,YACd,mCACCvB,IAAe,uBAAIA,KACpB,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMgB,GAAI,OAAQX,MAAO,CAAEC,KAAMH,GAAjC,qBAIF,yBACE,SAAC,KAAD,CAAMa,GAAI,UAAWX,MAAO,CAAEC,KAAMH,GAApC,2BAKJ,SAAC,KAAD,WAMX,C","sources":["api/getMovieById.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '53d36a46b9069260a6b19b0d73ae2aba';\n\nexport const getMovieById = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n","import { useParams, useLocation } from 'react-router-dom';\nimport { getMovieById } from 'api/getMovieById';\nimport { useState, useEffect } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [movieGenres, setMovieGenres] = useState('');\n  const { id } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    async function getMovieDetails() {\n      try {\n        const results = await getMovieById(id);\n\n        setMovieInfo(results);\n        setMovieGenres(results.genres.map(genre => genre.name).join(', '));\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMovieDetails(id);\n  }, [id]);\n\n  return (\n    <>\n      {movieInfo && (\n        <main>\n          <div>\n            <button type=\"button\">\n              <Link to={backLinkHref}>Go back</Link>\n            </button>\n          </div>\n          <img\n            src={`https://image.tmdb.org/t/p/w200/${movieInfo.poster_path}`}\n            alt={movieInfo.original_title}\n          />\n          <h3>{movieInfo.name}</h3>\n          <p>User score: {movieInfo.vote_average.toFixed(1) * 10}%</p>\n          <h4>Overview</h4>\n          <p>{movieInfo.overview}</p>\n          <h5>Genres</h5>\n          {movieGenres && <p>{movieGenres}</p>}\n          <div>\n            <h4>Additional information</h4>\n            <ul>\n              <li>\n                <Link to={'cast'} state={{ from: backLinkHref }}>\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link to={'reviews'} state={{ from: backLinkHref }}>\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n            <Outlet />\n          </div>\n        </main>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["getMovieById","id","axios","data","console","log","message","useState","movieInfo","setMovieInfo","movieGenres","setMovieGenres","useParams","backLinkHref","useLocation","state","from","useEffect","results","genres","map","genre","name","join","getMovieDetails","type","to","src","poster_path","alt","original_title","vote_average","toFixed","overview"],"sourceRoot":""}