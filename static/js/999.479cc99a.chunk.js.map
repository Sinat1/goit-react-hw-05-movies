{"version":3,"file":"static/js/999.479cc99a.chunk.js","mappings":"mRAKaA,EAAe,mCAAG,WAAMC,GAAN,kGAEJC,EAAAA,GAAAA,IAAA,6CACiBD,EADjB,4BAJX,mCAIW,2BAFI,uBAEnBE,EAFmB,EAEnBA,KAFmB,kBAMpBA,GANoB,gCAQ3BC,IAAAA,OAAAA,QAAwB,KAAMC,SARH,yDAAH,sD,kBCHfC,EAAoBC,EAAAA,GAAAA,GAAH,iFAMjBC,EAAoBD,EAAAA,GAAAA,GAAH,uRAUjBE,EAAyBF,EAAAA,GAAAA,GAAH,8ZAkBtBG,EAAoBH,EAAAA,GAAAA,EAAH,4GAOjBI,EAAsBJ,EAAAA,GAAAA,GAAH,qFAMnBK,EAAoBL,EAAAA,GAAAA,EAAH,qF,SCE9B,EAtCgB,WACd,OAAsCM,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQd,GAAOe,EAAAA,EAAAA,MAAPf,GAeR,OAbAgB,EAAAA,EAAAA,YAAU,WAAM,wCACd,+GAE8BjB,EAAgBC,GAF9C,gBAEYiB,EAFZ,EAEYA,QAERH,EAAeG,GAJnB,gDAMId,IAAAA,OAAAA,QAAwB,0BAN5B,0DADc,uBAAC,WAAD,wBAUde,CAAWlB,EACZ,GAAE,CAACA,KAGF,SAACK,EAAD,UACGQ,EAAYM,OAAS,EACpBN,EAAYO,KAAI,SAAAC,GAAM,OACpB,UAACd,EAAD,YACE,SAACE,EAAD,UAAoBY,EAAOC,cAC3B,UAACZ,EAAD,sBACWW,EAAOE,eAAeC,aAEjC,SAACb,EAAD,UAAoBU,EAAOI,YALLJ,EAAOrB,GADX,KAUtB,SAACQ,EAAD,sEAMP,C","sources":["api/getMovieReviews.js","components/MovieAdditionalInfo/Reviews.styled.js","components/MovieAdditionalInfo/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\n\nconst API_KEY = '53d36a46b9069260a6b19b0d73ae2aba';\n\nexport const getMovieReviews = async id => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n\n    return data;\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  }\n};\n","import styled from 'styled-components';\n\nexport const StyledReviewsList = styled.ul`\n  margin-top: 50px;\n  list-style: none;\n  padding: 0;\n`;\n\nexport const StyledReviewsItem = styled.li`\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: column;\n  border-radius: 2px;\n  margin-bottom: 30px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const StyledReviewsErrorItem = styled.li`\n  dispay: flex;\n  align-items: center;\n  justify-content: center;\n  width: 600px;\n  height: 50px;\n  margin-left: 30vw;\n  margin-right: 40vw;\n  text-align: center;\n  border-radius: 2px;\n  margin-top: 25px;\n  padding-top: 30px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  font-size: 18px;\n`;\n\nexport const StyledReviewsDate = styled.p`\n  display: flex;\n  font-size: 14px;\n  font-style: italic;\n  padding-left: 15px;\n`;\n\nexport const StyledReviewsAuthor = styled.h4`\n  display: flex;\n  font-size: 18px;\n  padding-left: 15px;\n`;\n\nexport const StyledReviewsText = styled.p`\n  display: flex;\n  font-size: 16px;\n  padding-left: 15px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'api/getMovieReviews';\nimport Notiflix from 'notiflix';\nimport {\n  StyledReviewsList,\n  StyledReviewsItem,\n  StyledReviewsErrorItem,\n  StyledReviewsDate,\n  StyledReviewsAuthor,\n  StyledReviewsText,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviewsInfo, setReviewsInfo] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function getReviews() {\n      try {\n        const { results } = await getMovieReviews(id);\n\n        setReviewsInfo(results);\n      } catch (error) {\n        Notiflix.Notify.failure('Failed to load reviews');\n      }\n    }\n    getReviews(id);\n  }, [id]);\n\n  return (\n    <StyledReviewsList>\n      {reviewsInfo.length > 0 ? (\n        reviewsInfo.map(review => (\n          <StyledReviewsItem key={review.id}>\n            <StyledReviewsDate>{review.created_at}</StyledReviewsDate>\n            <StyledReviewsAuthor>\n              Author: {review.author_details.username}\n            </StyledReviewsAuthor>\n            <StyledReviewsText>{review.content}</StyledReviewsText>\n          </StyledReviewsItem>\n        ))\n      ) : (\n        <StyledReviewsErrorItem>\n          We don't have any reviews for this movie. ðŸ˜¦\n        </StyledReviewsErrorItem>\n      )}\n    </StyledReviewsList>\n  );\n};\n\nexport default Reviews;\n"],"names":["getMovieReviews","id","axios","data","Notiflix","message","StyledReviewsList","styled","StyledReviewsItem","StyledReviewsErrorItem","StyledReviewsDate","StyledReviewsAuthor","StyledReviewsText","useState","reviewsInfo","setReviewsInfo","useParams","useEffect","results","getReviews","length","map","review","created_at","author_details","username","content"],"sourceRoot":""}